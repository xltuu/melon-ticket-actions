name: example

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  # ----------------------------------------------------
  # 1. schedule-id 목록을 두 개의 덩어리로 생성하는 작업
  # ----------------------------------------------------
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix_json_1: ${{ steps.set_matrix.outputs.id_list_1 }}
      matrix_json_2: ${{ steps.set_matrix.outputs.id_list_2 }}
    
    steps:
    - id: set_matrix
      name: Generate and filter schedule-id lists
      run: |
        # 👇 생성, 필터링, 나누기 과정을 하나의 명령어로 통합하여 오류를 방지합니다.
        echo "id_list_1=$(jq -c -n '[range(100001; 100441 + 1)] | map(select(. < 100133 or . > 100143)) | .[0:220]')" >> $GITHUB_OUTPUT
        echo "id_list_2=$(jq -c -n '[range(100001; 100441 + 1)] | map(select(. < 100133 or . > 100143)) | .[220:]')" >> $GITHUB_OUTPUT

  # ----------------------------------------------------
  # 2. 첫 번째 목록으로 티켓을 확인하는 작업
  # ----------------------------------------------------
  check-tickets-1:
    needs: generate-matrix
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        schedule-id: ${{ fromJSON(needs.generate-matrix.outputs.matrix_json_1) }}

    steps:
      - name: Check Tickets (Part 1)
        uses: xltuu/melon-ticket-actions@master
        with:
          product-id: 211942
          schedule-id: ${{ matrix.schedule-id }}
          seat-id: "1_0"
          slack-incoming-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          message: '<@U4CF18RKL> 티켓사세요! (회차: ${{ matrix.schedule-id }})'

  # ----------------------------------------------------
  # 3. 두 번째 목록으로 티켓을 확인하는 작업
  # ----------------------------------------------------
  check-tickets-2:
    needs: generate-matrix
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        schedule-id: ${{ fromJSON(needs.generate-matrix.outputs.matrix_json_2) }}

    steps:
      - name: Check Tickets (Part 2)
        uses: xltuu/melon-ticket-actions@master
        with:
          product-id: 211942
          schedule-id: ${{ matrix.schedule-id }}
          seat-id: "1_0"
          slack-incoming-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          message: '<@U4CF18RKL> 티켓사세요! (회차: ${{ matrix.schedule-id }})'
